{"version":3,"sources":["../../../../../../../../home/awilden/work/AS3/laxar/changelog-viewer-server/lib/adapters/gitweb_adapter.es6"],"names":[],"mappings":"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","file":"gitweb_adapter.js","sourcesContent":["/**\n * Copyright 2015 aixigo AG\n * Released under the MIT license.\n */\nimport { Promise } from 'es6-promise';\nimport cachedFetch from '../cached_fetch';\nimport xml from 'xml-selector';\nimport { exec } from 'child_process';\n\n\nexport default ( { serverUrl, repositoriesRoot } ) => {\n\n   const urlTemplates = {\n      REPOSITORIES: `${serverUrl}gitweb/?a=project_index;pf=${repositoriesRoot}`,\n      REPOSITORY: `${serverUrl}gitweb/?p=[repository];a=atom`,\n      REPOSITORY_GIT_URL: `${serverUrl}[repository]`,\n      CHANGELOG: `${serverUrl}gitweb/?p=[repository];a=blob_plain;f=CHANGELOG.md;hb=refs/heads/[branch]`\n   };\n   const VERSION_MATCHER = /refs\\/tags\\/v(\\d+)\\.(\\d+)\\.(\\d+)$/;\n\n   const { getText } = cachedFetch();\n   const api = {\n      getRepositories,\n      getRepositoryById\n   };\n   const headers = {};\n\n   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n   function getRepositories() {\n      return getText( urlTemplates.REPOSITORIES, headers )\n         .then( text => {\n            return Promise.all( text.split( '\\n' )\n               .map( line => line.split( ' ' )[0] )\n               .map( repository => getRepositoryById( repository ) ) );\n         } );\n   }\n\n   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n   function getRepositoryById( repositoryId ) {\n      const url = urlTemplates.REPOSITORY.replace( '[repository]', repositoryId );\n      return getText( url, headers )\n         .then( text => {\n            const pushedAt = xml( text ).find( '> feed > updated' ).first().text();\n            return {\n               id: repositoryId,\n               name: repositoryId,\n               pushed_at: pushedAt\n            };\n         } )\n         .then( createRepository );\n   }\n\n   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n   function createRepository( repositoryData ) {\n\n      const proto = {\n         getReleases: () => {\n            const url = urlTemplates.REPOSITORY_GIT_URL.replace( '[repository]', repositoryData.id );\n            return runGitLsRemote( url, '--tags' )\n               .then( text => {\n                  const versionData = text.split( '\\n' )\n                     .reduce( ( acc, line ) => {\n                        const match = VERSION_MATCHER.exec( line.trim() );\n                        if( match ) {\n                           const [ name, major, minor, patch ] = match;\n                           const release = `${major}.${minor}.x`;\n                           if( !( release in acc ) ) {\n                              acc[ release ] = {\n                                 versions: [],\n                                 name: release\n                              }\n                           }\n\n                           acc[ release ].versions.push( name );\n                        }\n                        return acc;\n                     }, {} );\n\n                  return Object.keys( versionData ).map( key => versionData[ key ] );\n               } );\n         },\n\n\n         getReleaseByVersion: ( version ) => {\n            const baseUrl = urlTemplates.CHANGELOG.replace( '[repository]', repositoryData.name );\n\n            const releaseUrl = baseUrl.replace( '[branch]', `release-${version}` );\n            return getText( releaseUrl, headers )\n               .then( changelog => {\n                  return {\n                     title: `v${version}`,\n                     changelog: changelog\n                  }\n               }, err => {\n                  console.log( 'rejected:', err );\n               } );\n         }\n      };\n\n      let repository = Object.create( proto );\n      Object.keys( repositoryData )\n         .forEach( key => {\n            Object.defineProperty( repository, key, {\n               enumerable: true,\n               value: repositoryData[ key ]\n            } );\n         } );\n      return repository;\n   }\n\n   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n   function runGitLsRemote( repository, args ) {\n      return new Promise( ( resolve, reject ) => {\n         const command = `git ls-remote ${args} ${repository}`;\n\n         exec( command, ( err, stdout, stderr ) => {\n            if( err ) {\n               console.error( stderr );\n               return reject( err );\n            }\n\n            resolve( stdout );\n         } );\n      } );\n   }\n\n   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n   return api;\n\n};\n"]}