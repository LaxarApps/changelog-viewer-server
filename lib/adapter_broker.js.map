{"version":3,"sources":["../../../../../../../home/awilden/work/AS3/laxar/changelog-viewer-server/lib/adapter_broker.es6"],"names":[],"mappings":"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","file":"adapter_broker.js","sourcesContent":["/**\n * Copyright 2015 aixigo AG\n * Released under the MIT license.\n */\nimport { Promise } from 'es6-promise';\nimport createGithubAdapter from './adapters/github_adapter';\nimport createGitwebAdapter from './adapters/gitweb_adapter';\n\nexport default ( config ) => {\n\n   const api = {\n      getCategories,\n      getRepositories,\n      findCategoryById,\n      findRepositoryById\n   };\n   const adaptersByCategory = createAdaptersByCategory();\n   const adaptersById = createAdaptersById( adaptersByCategory );\n\n   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n   function getCategories() {\n      return Promise.resolve( Object.keys( config.categories )\n         .map( id => {\n            return {\n               id: id,\n               title: config.categories[ id ]\n            };\n         } ) );\n   }\n\n   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n   function getRepositories( categoryId ) {\n      return Promise.all(\n         ( adaptersByCategory[ categoryId ] || [] )\n            .map( adapter => {\n               return adapter.getRepositories()\n                  .then( repositoriesDecorator( adapter ) );\n            } )\n         )\n         .then( flatten );\n   }\n\n   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n   function findCategoryById( categoryId ) {\n      return getCategories()\n         .then( categories => categories.filter( category => category.id === categoryId )[0] || null );\n   }\n\n   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n   function findRepositoryById( adapterId, repositoryId ) {\n      return adaptersById[ adapterId ].getRepositoryById( repositoryId )\n         .then( repositoryDecorator( adaptersById[ adapterId ] ) );\n   }\n\n   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n   function createAdaptersByCategory() {\n      const factories = {\n         github: createGithubAdapter,\n         gitweb: createGitwebAdapter\n      };\n      let adapters = {};\n      config.sources\n         .forEach( ( source, index ) => {\n            const factory = factories[ source.type ];\n            if( !factory ) {\n               throw new Error( `No adapter factory for type ${source.type} found.` );\n            }\n            if( !( source.category in adapters ) ) {\n               adapters[ source.category ] = [];\n            }\n\n            let adapter = factory( source );\n            adapter.__id = index;\n            adapters[ source.category ].push( adapter );\n         } );\n      return adapters;\n   }\n\n   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n   function repositoriesDecorator( adapter ) {\n      return repositories => {\n         repositories.forEach( repositoryDecorator( adapter ) );\n         return repositories;\n      }\n   }\n\n   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n   function repositoryDecorator( adapter ) {\n      return repository => {\n         if( repository ) {\n            repository.__adapterId = adapter.__id\n         }\n         return repository;\n      }\n   }\n\n   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n   function createAdaptersById( adaptersByCategory ) {\n      let adapters = {};\n      Object.keys( adaptersByCategory )\n         .map( category => adaptersByCategory[ category ] )\n         .reduce( ( acc, list ) => acc.concat( list ), [] )\n         .forEach( adapter => adapters[ adapter.__id ] = adapter );\n      return adapters;\n   }\n\n   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n   function flatten( listOfLists ) {\n      return [].concat.apply( [], listOfLists );\n   }\n\n   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n   return api;\n\n};"]}