{"version":3,"sources":["../../../../../../home/awilden/work/AS3/laxar/changelog-viewer-server/index.es6"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["/**\n * Copyright 2015 aixigo AG\n * Released under the MIT license.\n */\nimport { readFile } from 'fs';\nimport { createServer } from 'http';\nimport { Promise } from 'es6-promise';\nimport { Resource as HalResource } from 'hal';\nimport connect from 'connect';\nimport Router from 'routes';\nimport url from 'url';\nimport createBroker from './lib/adapter_broker';\nimport cachedFetch from './lib/cached_fetch';\n\n\nnew Promise( ( resolve, reject ) => {\n   readFile( './config.json', ( err, string ) =>  err ? reject( err ) : resolve( string ) );\n} )\n   .then( string => JSON.parse( string ) )\n   .then( startServer, err => console.error( `An error occurred while reading the config file (config.json): ${err}` ) )\n   .catch( err => {\n      console.error( `An error occurred while starting the server: ${err}` );\n      console.error( 'Stack: ', err.stack );\n   } );\n\nconst routes = {\n   ROOT: '/',\n   CACHE: '/cache',\n   CATEGORIES: '/categories',\n   CATEGORY_BY_ID: '/categories/:categoryId',\n   COMPONENT_MAP: '/component-map',\n   REPOSITORIES_BY_CATEGORY: '/categories/:categoryId/repositories',\n   REPOSITORIES: '/repositories',\n   REPOSITORY_BY_ID: '/repositories/:globalRepositoryId',\n   REPOSITORY_RELEASES: '/repositories/:globalRepositoryId/releases',\n   REPOSITORY_RELEASE_BY_ID: '/repositories/:globalRepositoryId/releases/:releaseId'\n};\nconst relations = {\n   CACHE: 'cache',\n   CATEGORY: 'category',\n   CATEGORIES: 'categories',\n   COMPONENT_MAP: 'component-map',\n   REPOSITORIES: 'repositories',\n   REPOSITORY: 'repository',\n   RELEASE: 'release',\n   RELEASES: 'releases'\n};\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nfunction startServer( config ) {\n\n   const router = new Router();\n   const server = connect();\n   const broker = createBroker( config );\n\n   server.use( ( req, res ) => {\n      const path = url.parse( req.url ).pathname;\n      const match = router.match( path );\n\n      if( !match ) {\n         console.warn( `Found no match for url \"${req.url}\".` );\n         res.statusCode = 404;\n         res.end();\n         return;\n      }\n\n      match.fn( req, res, match );\n   } );\n\n   addRoutes( config, { router, broker } );\n\n   createServer( server ).listen( config.port || 8000 );\n\n}\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nfunction addRoutes( config, { router, broker } ) {\n\n   let resourcesCache = {};\n   const { getJson, clearCache } = cachedFetch( 0 );\n\n   // HAL routes\n\n   addHalRoute( routes.ROOT, () => {\n      const resource = new HalResource( {}, routes.ROOT );\n      resource.link( relations.CACHE, routes.CACHE );\n      resource.link( relations.CATEGORIES, routes.CATEGORIES );\n      if( config.componentMapUrl ) {\n         resource.link( relations.COMPONENT_MAP, routes.COMPONENT_MAP );\n      }\n      return resource;\n   } );\n\n   addHalRoute( routes.CATEGORIES, () => {\n      const categoriesResource = new HalResource( {}, routes.CATEGORIES );\n      return broker.getCategories()\n         .then( categories => {\n            return Promise.all( categories.map( category => {\n               const categoryResource = resourceForCategory( category );\n               categoriesResource.link( relations.CATEGORY, hrefForCategory( category ) );\n               categoriesResource.embed( relations.CATEGORY, categoryResource, false );\n\n               return broker.getRepositories( category.id )\n                  .then( repositories => {\n                     const repositoriesResource = resourceForRepositories( repositories, {\n                        href: hrefForRepositoriesByCategory( category ),\n                        embedded: true\n                     } );\n                     categoryResource.embed( relations.REPOSITORIES, repositoriesResource, false );\n                  } );\n            } ) );\n         } )\n         .then( () => categoriesResource );\n   } );\n\n   addHalRoute( routes.CATEGORY_BY_ID, ( { categoryId } ) => {\n      return broker.findCategoryById( categoryId )\n         .then( category => category ? resourceForCategory( category ) : null );\n   } );\n\n   addHalRoute( routes.COMPONENT_MAP, () => {\n      return getJson( config.componentMapUrl )\n         .then( componentMap => componentMap ? resourceForComponentMap( componentMap ) : null );\n   } );\n\n   addHalRoute( routes.REPOSITORIES_BY_CATEGORY, ( { categoryId } ) => {\n      return broker.findCategoryById( categoryId )\n         .then( category => {\n            if( !category ) {\n               return null;\n            }\n\n            const hrefForRepositories = hrefForRepositoriesByCategory( category );\n            return broker.getRepositories( category.id )\n               .then( repositories => resourceForRepositories( repositories, { href: hrefForRepositories } ) );\n         } );\n   } );\n\n   addHalRoute( routes.REPOSITORIES, () => {\n      return broker.getCategories()\n         .then( categories => {\n            return Promise.all( categories.map( category => broker.getRepositories( category.id ) ) )\n               .then( repositoriesLists => [].concat.apply( [], repositoriesLists ) );\n         } )\n         .then( repositories => {\n            return resourceForRepositories( repositories );\n         } );\n   } );\n\n   addHalRoute( routes.REPOSITORY_BY_ID, ( { globalRepositoryId } ) => {\n      const [ adapterId, repositoryId ] = globalRepositoryId.split( '__' );\n      return broker.findRepositoryById( adapterId, repositoryId )\n         .then( repository => repository ? resourceForRepository( repository ) : null );\n   } );\n\n   addHalRoute( routes.REPOSITORY_RELEASES, ( { globalRepositoryId } ) => {\n      const [ adapterId, repositoryId ] = globalRepositoryId.split( '__' );\n      return broker.findRepositoryById( adapterId, repositoryId )\n         .then( repository => {\n            if( !repository ) {\n               return null;\n            }\n\n            return repository.getReleases()\n               .then( releases => resourceForReleasesByRepository( repository, releases ) );\n         } );\n   } );\n\n   addHalRoute( routes.REPOSITORY_RELEASE_BY_ID, ( { globalRepositoryId, releaseId } ) => {\n      const [ adapterId, repositoryId ] = globalRepositoryId.split( '__' );\n      return broker.findRepositoryById( adapterId, repositoryId )\n         .then( repository => {\n            if( !repository ) {\n               return null;\n            }\n            if( releaseId.indexOf( 'v' ) !== 0 ) {\n               return null;\n            }\n\n            const version = releaseId.substr( 1 );\n            return repository.getReleaseByVersion( version )\n               .then( release => resourceForRelease( repository, release ) );\n         } );\n   } );\n\n   // low level routes\n\n   router.addRoute( routes.CACHE, ( { method }, res ) => {\n\n      if( method === 'DELETE' || method === 'POST' ) {\n         clearCache();\n         resourcesCache = {};\n         broker.clearCache();\n\n         res.statusCode = 204;\n         if( method === 'POST' ) {\n            res.statusCode = 202;\n            refreshCache();\n         }\n\n         res.end();\n         return;\n      }\n\n      res.statusCode = 405;\n      res.end();\n   } );\n\n   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n   const now = () => new Date().getTime();\n   const stillValid = ( { timestamp } ) => timestamp > now() - ( config.maxAgeMs || 2 * 60 * 60 * 1000 );\n\n   function addHalRoute( route, resourceBuilder ) {\n      router.addRoute( route, ( req, res, match ) => {\n\n         const { url } = req;\n         const timeoutPromise = new Promise( ( resolve, reject ) => {\n            setTimeout( reject.bind( null, 'Request timed out.' ), config.requestTimeout || 60000 );\n         } );\n\n         if( url in resourcesCache && stillValid( resourcesCache[ url ] ) ) {\n            return processResourceBuilderResult( resourcesCache[ url ].resource );\n         }\n\n         Promise.race( [ timeoutPromise, resourceBuilder( match.params, req, res ) ] )\n            .then( resource => {\n               if( resource ) {\n                  resourcesCache[ url ] = { timestamp: now(), resource };\n               }\n               return resource;\n            } )\n            .then( processResourceBuilderResult )\n            .catch( error => {\n               const errorMessage = typeof error === 'string' ? error : 'Unknown internal error';\n               if( error instanceof Error ) {\n                  console.error( `An error occurred while serving request to ${route}: ${error}` );\n                  console.error( `URL: ${url}` );\n                  console.error( 'Stack: ', error.stack );\n               }\n\n               res.statusCode = 500;\n               res.write( errorMessage );\n               res.end();\n            } );\n\n         function processResourceBuilderResult( resource ) {\n            if( resource ) {\n               writeCommonHeaders( res );\n\n               res.write( JSON.stringify( resource.toJSON(), null, 3 ) );\n            }\n            else {\n               res.statusCode = 404;\n            }\n            res.end();\n         }\n\n      } );\n   }\n\n   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n   let alreadyRefreshing = false;\n   function refreshCache() {\n      if( alreadyRefreshing ) {\n         return Promise.resolve();\n      }\n\n      alreadyRefreshing = true;\n\n      const baseUrl = `http://localhost:${config.port}`;\n      const startTime = Date.now();\n      return getJson( `${baseUrl}${routes.CATEGORIES}` )\n         .then( followAllLinksRecursively.bind( null, [] ) )\n         .then( links => {\n            console.log( `Refreshed cache in ${Date.now() - startTime}ms. Followed ${links.length} links.` );\n         }, err => console.error( err ) )\n         .then( () => alreadyRefreshing = false );\n\n      function followAllLinksRecursively( seenLinks, halResponse ) {\n         if( !halResponse || !halResponse._links ) {\n            return Promise.resolve( seenLinks );\n         }\n\n         const links = Object.keys( halResponse._links )\n            .filter( relation => relation !== 'self' )\n            .map( relation => halResponse._links[ relation ] )\n            .map( linkObject => Array.isArray( linkObject ) ? linkObject : [ linkObject ] )\n            .reduce( ( links, linkObject ) => {\n               return linkObject.reduce( ( objectLinks, { href } ) => {\n                  if( seenLinks.indexOf( href ) === -1 ) {\n                     seenLinks.push( href );\n                     return [ ...objectLinks, `${baseUrl}${href}` ];\n                  }\n                  return objectLinks;\n               }, links );\n            }, [] );\n\n         return links.reduce( ( promise, link ) => {\n            return promise\n               .then( seenLinks => {\n                  return getJson( link )\n                     .then( response => followAllLinksRecursively( seenLinks, response ) );\n               } );\n         }, Promise.resolve( seenLinks ) );\n      }\n   }\n}\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nconst hrefForComponentMap = () => createUrl( routes.COMPONENT_MAP, {} );\nfunction resourceForComponentMap( componentMap ) {\n   return new HalResource( componentMap, hrefForComponentMap() );\n}\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nconst hrefForCategory = category => createUrl( routes.CATEGORY_BY_ID, { categoryId: category.id } );\nfunction resourceForCategory( category ) {\n   const categoryResource = new HalResource( category, hrefForCategory( category ) );\n   categoryResource.link( relations.REPOSITORIES, hrefForRepositoriesByCategory( category ) );\n   return categoryResource;\n}\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nconst hrefForRepositories = category => createUrl( routes.REPOSITORIES, {} );\nconst hrefForRepositoriesByCategory = category => createUrl( routes.REPOSITORIES_BY_CATEGORY, { categoryId: category.id } );\nfunction resourceForRepositories( repositories, { embedded=false, href=null}={} ) {\n   const repositoriesResource = new HalResource( {}, href || hrefForRepositories() );\n   repositories.forEach( repository => {\n      const repositoryResource = resourceForRepository( repository );\n\n      if( embedded ) {\n         repositoriesResource.link( relations.REPOSITORY, hrefForRepository( repository ) );\n         repositoriesResource.embed( relations.REPOSITORY, repositoryResource, false );\n      }\n      else {\n         repositoriesResource.link( relations.REPOSITORY, {\n            href: hrefForRepository( repository ),\n            title: repositoryResource.title\n         } );\n      }\n   } );\n   return repositoriesResource;\n}\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nconst hrefForRepository = repository => createUrl( routes.REPOSITORY_BY_ID, { globalRepositoryId: globalRepositoryId( repository ) } );\nfunction resourceForRepository( repository ) {\n   const repositoryHref = hrefForRepository( repository );\n   const repositoryResource = new HalResource( {\n      title: repository.name,\n      pushedAt: repository.pushedAt,\n      organization: repository.organization\n   }, repositoryHref );\n   repositoryResource.link( relations.RELEASES, `${repositoryHref}/releases` );\n   return repositoryResource;\n}\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nconst hrefForReleaseByRepository = ( repository, release ) => {\n   return createUrl( routes.REPOSITORY_RELEASE_BY_ID, {\n      globalRepositoryId: globalRepositoryId( repository ),\n      releaseId: release.title\n   } );\n};\nfunction resourceForRelease( repository, release ) {\n   const releaseHref = hrefForReleaseByRepository( repository, release );\n   return new HalResource( release, releaseHref );\n}\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nconst hrefForReleasesByRepository = repository => createUrl( routes.REPOSITORY_RELEASES, { globalRepositoryId: globalRepositoryId( repository ) } );\nfunction resourceForReleasesByRepository( repository, releases ) {\n   const releasesHref = hrefForReleasesByRepository( repository );\n   const releasesResource = new HalResource( {}, releasesHref );\n   releases.forEach( release => {\n      releasesResource.link( relations.RELEASE, {\n         href: hrefForReleaseByRepository( repository, release ),\n         title: release.title\n      } );\n   } );\n   return releasesResource;\n}\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nfunction globalRepositoryId( repository ) {\n   return encodeURIComponent( `${repository.__adapterId}__${repository.id}` );\n}\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nfunction createUrl( route, params ) {\n   return Object.keys( params ).reduce( ( url, key ) => url.replace( `:${key}`, params[ key ] ), route );\n}\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nfunction writeCommonHeaders( res ) {\n   res.setHeader( 'Content-Type', 'application/hal+json' );\n}\n"]}